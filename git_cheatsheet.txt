------------------------------------------------------------
Initialize a central repository on a server (ex. github.com)
------------------------------------------------------------
git init --bare /path/to/repo.git


------------------------------------------------------------
Clone a remote repository to your local space.
There are many protocols that can be used to clone.
Ex. https,ssh
------------------------------------------------------------
git clone https://github.com/ansumanm/Docs.git


------------------------------------------------------------
A typical workflow after /creating/editing a file
------------------------------------------------------------
1) Check the status of the repo
git status  

2) Add the files to be staged.
git add git_cheatsheet.txt 

3)Configure your Email address and name for a repo.
Without this, commit is not possible. This needs to be done once.

git config --global user.email "ansuman.mohanty@gmail.com"
git config --global user.name "Ansuman Mohanty"

git config --global core.editor vim 	# Configure your Editor (optional).
$ git config --list	# Check the configuration
credential.helper=osxkeychain
user.email=ansuman.mohanty@gmail.com
user.name=Ansuman Mohanty
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=true
remote.origin.url=https://github.com/ansumanm/Docs.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master
remote.pb.url=https://github.com/paulboone/ticgit
remote.pb.fetch=+refs/heads/*:refs/remotes/pb/*


4) Commit the changes to your local repo.
git commit 

5) Push the changes to the central repo.
git push origin master # Push your changes to the central repo.

------------------------------------------------------------
Working with remote repositories.
------------------------------------------------------------
$ git remote
origin          # if we have cloned from a remote repo,
	 	# it is set to default repo named origin

$ git remote -v  # Shows the shortnames for the URLs
origin	https://github.com/ansumanm/Docs.git (fetch)
origin	https://github.com/ansumanm/Docs.git (push)

$ git remote add <shortname> <url> # To add a remote repo explicitly.
git remote add pb https://github.com/paulboone/ticgit

$ git remote -v
origin	https://github.com/ansumanm/Docs.git (fetch)
origin	https://github.com/ansumanm/Docs.git (push)
pb	https://github.com/paulboone/ticgit (fetch)
pb	https://github.com/paulboone/ticgit (push)

$ git fetch pb 	# Fetch command goes out to that remote project and 
		# pulls all the data that you dont have in your project
		# You can merge it or inspect it anytime after that.

$ git fetch origin # Fetches any new work after you last cloned. It 
			# only downloads the data. We need to merge it.

# git pull origin # Will fetch the data and try to merge it also.

$ git remote show pb # Inspect a remote.

$ git remote rename pb paul # Rename a remote.

$ git remote rm paul # Remote a remote.
